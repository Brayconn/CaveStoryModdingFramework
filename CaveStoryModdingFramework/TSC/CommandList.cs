using System.Collections.Generic;

namespace CaveStoryModdingFramework.TSC
{
    public static class CommandList
    {
        /// <summary>
        /// All default TSC commands in the order they appear in the TSC parser
        /// </summary>
        public static readonly IReadOnlyList<Command> BaseCommands = new List<Command>()
        {
            new Command("END", "END event",    TSCCommandDescriptions.END,     CommandProperties.EndsEvent | CommandProperties.ClearsTextbox),
            new Command("LI+", "LIfe +",       TSCCommandDescriptions.LIPlus,  "Life"),
            new Command("ML+", "Max Life +",   TSCCommandDescriptions.MLPlus,  "Life"),
            new Command("AE+", "Arms Energy +",TSCCommandDescriptions.AEPlus),
            new Command("IT+", "ITem +",       TSCCommandDescriptions.ITPlus,  ArgumentTypes.Item),
            new Command("IT-", "ITem -",       TSCCommandDescriptions.ITMinus, ArgumentTypes.Item),
            new Command("EQ+", "EQuip +",      TSCCommandDescriptions.EQPlus,  ArgumentTypes.EquipFlags),
            new Command("EQ-", "EQuip -",      TSCCommandDescriptions.EQMinus, ArgumentTypes.EquipFlags),
            new Command("AM+", "ArMs +",       TSCCommandDescriptions.AMPlus,  new Argument(ArgumentTypes.Arms), new Argument("Ammo")),
            new Command("AM-", "ArMs -",       TSCCommandDescriptions.AMMinus, ArgumentTypes.Arms),
            new Command("ZAM", "Zero ArMs",    TSCCommandDescriptions.ZAM),
            new Command("TAM", "Trade ArMs",   TSCCommandDescriptions.TAM,     "Weapon 1", ArgumentTypes.Arms, "Weapon 2", ArgumentTypes.Arms, "Ammo"),
            new Command("PS+", "Portal Slot +",TSCCommandDescriptions.PSPlus,  new Argument("Slot"), new Argument(ArgumentTypes.Event)),
            new Command("MP+", "MaP +",        TSCCommandDescriptions.MPPlus,  ArgumentTypes.MapFlags),
            new Command("UNI", "UNIt",         TSCCommandDescriptions.UNI,     ArgumentTypes.Unit),
            new Command("STC", "Save Time Counter", TSCCommandDescriptions.STC),
            new Command("TRA", "TRAnsport",    TSCCommandDescriptions.TRA, CommandProperties.EndsEvent, "Destination", ArgumentTypes.Map, ArgumentTypes.Event, ArgumentTypes.XCoord, ArgumentTypes.YCoord),
            new Command("MOV", "MOVe",         TSCCommandDescriptions.MOV,     ArgumentTypes.XCoord, ArgumentTypes.YCoord),
            new Command("HMC", "Hide My Character", TSCCommandDescriptions.HMC),
            new Command("SMC", "Show My Character", TSCCommandDescriptions.SMC),
            new Command("FL+", "FLag +",       TSCCommandDescriptions.FLPlus,  ArgumentTypes.NpcFlags),
            new Command("FL-", "FLag -",       TSCCommandDescriptions.FLMinus, ArgumentTypes.NpcFlags),
            new Command("SK+", "SKipflag +",   TSCCommandDescriptions.SKPlus,  ArgumentTypes.SkipFlags),
            new Command("SK-", "Skipflag -",   TSCCommandDescriptions.SKMinus, ArgumentTypes.SkipFlags),
            new Command("KEY", "KEY lock",     TSCCommandDescriptions.KEY),
            new Command("PRI", "PRevent Interaction", TSCCommandDescriptions.PRI),
            new Command("FRE", "FREe",         TSCCommandDescriptions.FRE),
            new Command("NOD", "NOD",          TSCCommandDescriptions.NOD),
            new Command("CLR", "CLeaR",        TSCCommandDescriptions.CLR, CommandProperties.ClearsTextbox),
            new Command("MSG", "MeSsaGe",      TSCCommandDescriptions.MSG, CommandProperties.ClearsTextbox),
            new Command("MS2", "MeSsage 2",    TSCCommandDescriptions.MS2, CommandProperties.ClearsTextbox),
            new Command("MS3", "MeSsage 3",    TSCCommandDescriptions.MS3, CommandProperties.ClearsTextbox),
            new Command("WAI", "WAIt",         TSCCommandDescriptions.WAI, "Ticks"),
            new Command("WAS", "WAit until Standing", TSCCommandDescriptions.WAS),
            new Command("TUR", "Text UnRead?", TSCCommandDescriptions.TUR),
            new Command("SAT", "Speed-up All Text", TSCCommandDescriptions.SAT),
            new Command("CAT", "(C?) All Text",TSCCommandDescriptions.CAT),
            new Command("CLO", "CLOse",        TSCCommandDescriptions.CLO, CommandProperties.ClearsTextbox),
            new Command("EVE", "EVEnt",        TSCCommandDescriptions.EVE, CommandProperties.EndsEvent, ArgumentTypes.Event),
            new Command("YNJ", "Yes/No Jump",  TSCCommandDescriptions.YNJ, ArgumentTypes.Event),
            new Command("FLJ", "FLag Jump",    TSCCommandDescriptions.FLJ, ArgumentTypes.NpcFlags, ArgumentTypes.Event),
            new Command("SKJ", "SKipflag Jump",TSCCommandDescriptions.SKJ, ArgumentTypes.SkipFlags, ArgumentTypes.Event),
            new Command("ITJ", "ITem Jump",    TSCCommandDescriptions.ITJ, ArgumentTypes.Item, ArgumentTypes.Event),
            new Command("AMJ", "ArMs Jump",    TSCCommandDescriptions.AMJ, ArgumentTypes.Arms, ArgumentTypes.Event),
            new Command("UNJ", "UNit Jump",    TSCCommandDescriptions.UNJ, ArgumentTypes.Unit, ArgumentTypes.Event),
            new Command("ECJ", "Equip Check Jump", TSCCommandDescriptions.ECJ, ArgumentTypes.EquipFlags, ArgumentTypes.Event),
            new Command("NCJ", "Npc Check Jump", TSCCommandDescriptions.NCJ, ArgumentTypes.NPCType, ArgumentTypes.Event),
            new Command("MPJ", "MaP Jump",     TSCCommandDescriptions.MPJ, ArgumentTypes.Event),
            new Command("SSS", "Start Stream Sound", TSCCommandDescriptions.SSS, "Volume"),
            new Command("CSS", "Clear Stream Sound", TSCCommandDescriptions.CSS),
            new Command("SPS", "Start Propeller Sound", TSCCommandDescriptions.SPS),
            new Command("CPS", "Clear Prop. Sound", TSCCommandDescriptions.CPS),
            new Command("QUA", "QUAke",        TSCCommandDescriptions.QUA, "Ticks"),
            new Command("FLA", "FLAsh",        TSCCommandDescriptions.FLA),
            new Command("FAI", "FAde In",      TSCCommandDescriptions.FAI, ArgumentTypes.Direction),
            new Command("FAO", "FAde Out",     TSCCommandDescriptions.FAO, ArgumentTypes.Direction),
            new Command("MNA", "Map NAme",     TSCCommandDescriptions.MNA),
            new Command("FOM", "Focus On Me",  TSCCommandDescriptions.FOM, "Ticks"),
            new Command("FON", "Focus On Npc", TSCCommandDescriptions.FON, new Argument(ArgumentTypes.NPCEvent), new Argument("Ticks")),
            new Command("FOB", "Focus On Boss",TSCCommandDescriptions.FOB, new Argument(ArgumentTypes.NPCEvent), new Argument("Ticks")),
            new Command("SOU", "SOUnd",        TSCCommandDescriptions.SOU, ArgumentTypes.Sound),
            new Command("CMU", "Change MUsic", TSCCommandDescriptions.CMU, ArgumentTypes.Music),
            new Command("FMU", "Fade MUsic",   TSCCommandDescriptions.FMU),
            new Command("RMU", "Restore MUsic",TSCCommandDescriptions.RMU),
            new Command("MLP", "Map LooP",     TSCCommandDescriptions.MLP),
            new Command("SLP", "Show Location Portals", TSCCommandDescriptions.SLP, CommandProperties.EndsEvent),
            new Command("DNP", "Delete NPc",   TSCCommandDescriptions.DNP, ArgumentTypes.NPCEvent),
            new Command("DNA", "Delete Npc (All)", TSCCommandDescriptions.DNA, ArgumentTypes.NPCType),
            new Command("BOA", "BOss Animation", TSCCommandDescriptions.BOA, ArgumentTypes.BOA),
            new Command("CNP", "Change NPc",   TSCCommandDescriptions.CNP, ArgumentTypes.NPCEvent, ArgumentTypes.NPCType, ArgumentTypes.Direction),
            new Command("ANP", "Animate NPc",  TSCCommandDescriptions.ANP, ArgumentTypes.NPCEvent, ArgumentTypes.ANP, ArgumentTypes.Direction),
            new Command("INP", "(Initialize?) NPc", TSCCommandDescriptions.INP, ArgumentTypes.NPCEvent, ArgumentTypes.NPCType, ArgumentTypes.Direction),
            new Command("SNP", "Set NPc",      TSCCommandDescriptions.SNP, ArgumentTypes.NPCType, ArgumentTypes.XCoord, ArgumentTypes.YCoord, ArgumentTypes.Direction),
            new Command("MNP", "Move NPc",     TSCCommandDescriptions.MNP, ArgumentTypes.NPCEvent, ArgumentTypes.XCoord, ArgumentTypes.YCoord, ArgumentTypes.Direction),
            new Command("SMP", "Shift Map Parts", TSCCommandDescriptions.SMP, ArgumentTypes.XCoord, ArgumentTypes.YCoord),
            new Command("CMP", "Change Map Parts", TSCCommandDescriptions.CMP, ArgumentTypes.XCoord, ArgumentTypes.YCoord, ArgumentTypes.TileIndex),
            new Command("BSL", "Boss Script Load", TSCCommandDescriptions.BSL, ArgumentTypes.NPCEvent),
            new Command("MYD", "MY Direction", TSCCommandDescriptions.MYD, ArgumentTypes.Direction),
            new Command("MYB", "MY Bump",      TSCCommandDescriptions.MYB, ArgumentTypes.Direction),
            new Command("MM0", "My Motion 0",  TSCCommandDescriptions.MM0),
            new Command("INI", "INItialize",   TSCCommandDescriptions.INI, CommandProperties.EndsEvent),
            new Command("SVP", "SaVe Profile", TSCCommandDescriptions.SVP),
            new Command("LDP", "LoaD Profile", TSCCommandDescriptions.LDP, CommandProperties.EndsEvent),
            new Command("FAC", "FACe",         TSCCommandDescriptions.FAC, ArgumentTypes.Face),
            //new Command("<FAC", "FACe",         TSCCommandDescriptions.FAC, ArgumentTypes.Face), //Duplicate FAC command
            new Command("GIT", "Graphic ITem", TSCCommandDescriptions.GIT, ArgumentTypes.ItemGraphic),
            new Command("NUM", "NUMber",       TSCCommandDescriptions.NUM, ArgumentTypes.Number),
            new Command("CRE", "CREdits",      TSCCommandDescriptions.CRE),
            new Command("SIL", "Show ILlustration", TSCCommandDescriptions.SIL, ArgumentTypes.CreditIllustration),
            new Command("CIL", "Clear ILlustration", TSCCommandDescriptions.CIL),
            new Command("XX1", "XX1",          TSCCommandDescriptions.XX1, ArgumentTypes.IslandFalling),
            new Command("ESC", "ESCape",       TSCCommandDescriptions.ESC, CommandProperties.EndsEvent),
        };

        public static readonly IReadOnlyList<Command> OtherCommands = new List<Command>()
        {
            //CS+ exclusive
            new Command("FAC", "FACe", "Show facepic", new Argument("Mirrored",1, ArgumentTypes.Number, ""), new Argument("Talking",1, ArgumentTypes.Number, ""), new Argument("Face",2, ArgumentTypes.Face, "")){ Author = "Nicalis" },
            new Command("I+N", "Item + N", "Add 1 of item X to the inventory, with a maximum of Y", ArgumentTypes.Item, ArgumentTypes.Number){ Author = "Nicalis" },
            new Command("2MV", "2nd player MoVe", "Moves the player who didn't trigger this event to the one who did. Values < 11 put the player one tile away, anything greater puts them X/10 pixels away", ArgumentTypes.Number){ Author = "Nicalis" },
            new Command("HM2", "Hide My character 2", "Hides only the player who triggered the event"){ Author = "Nicalis" },
            new Command("FF-", "First Flag -", "Unset the first NPC flag in the range X to Y (inclusive)", ArgumentTypes.NpcFlags, ArgumentTypes.NpcFlags){ Author = "Nicalis" },
            new Command("KE2", "KEy 2", "Use in an inventory item description to allow the user to move to a different item at any time. Lasts until the cursor moves, or until a <FR2"){ Author = "Nicalis" },
            new Command("FR2", "FRee 2", "Undoes <KE2"){ Author = "Nicalis" },
            new Command("2PJ", "2 Player Jump", "Jump to event X if playing in 2 player mode", ArgumentTypes.Event){ Author = "Nicalis" },
            new Command("INJ", "InveNtory Jump", "Jump to event Z if player has at least Y of X item", ArgumentTypes.Item, ArgumentTypes.Number, ArgumentTypes.Event){ Author = "Nicalis" },
            new Command("POP", "POP event", "Event stack pop; restores read position from top of event stack", CommandProperties.EndsEvent){ Author = "Nicalis" },
            new Command("PSH", "PuSH event", "Event stack push; saves the current read position (after this command) to the stack, then jumps to event X", ArgumentTypes.Event){ Author = "Nicalis" },
            new Command("ACH", "ACHievement", "Earn achievenement X", ArgumentTypes.Number){ Author = "Nicalis" },
            //unused commands
            new Command("RFW", "Rapid Fire Weapon", "Toggles automatic firing of the Polar Star; Will attempt to fire a bullet every frame"){ Author = "Nicalis" },
            new Command("RSP", "ReSpawn Player", "Teleports all other players to player 1's position"){ Author = "Nicalis" },

            //Included in Noxid's "TSC+"/BL's built-in TSC+ command list
            new Command("LRX", "Left Right X", "Jump to W, X, or Y, if the player moves Left, Right, or Shoots",
                "Left Event", ArgumentTypes.Event, "Right Event", ArgumentTypes.Event, "Shoot Event", ArgumentTypes.Event){ Author = "Noxid" },
            new Command("FNJ", "Flag NotJump", "Jump if X is not set.", ArgumentTypes.NpcFlags, ArgumentTypes.Event){ Author = "Noxid" },
            new Command("VAR", "VARiable set", "Puts X into variable W", ArgumentTypes.Number, ArgumentTypes.Number){ Author = "Noxid" },
            new Command("VAZ", "VAriable Zero", "Zeros X variables, starting at variable W", ArgumentTypes.Number, ArgumentTypes.Number){ Author = "Noxid" },
            new Command("VAO", "VAriable Operation", "Performs operation $ on W using X",
                new Argument("Variable", ArgumentTypes.Number,""),
                new Argument("Operation", 1, ArgumentTypes.Number,""), //TODO use a local enum for this
                new Argument("Value", ArgumentTypes.Number,"")
                ){ Author = "Noxid" },
            new Command("VAJ", "VAriable Jump", "Compare X to W using method Y, if true jump to Z",ArgumentTypes.Number, ArgumentTypes.Number, ArgumentTypes.Number, ArgumentTypes.Event){ Author = "Noxid" },
            new Command("RND", "RaNdoM", "Puts random # between W (min) and X (max) into variable Y", ArgumentTypes.Number, ArgumentTypes.Number, ArgumentTypes.Number){ Author = "Noxid" },
            new Command("IMG", "tIMaGe", "Will set TimgFILE.bmp over the screen. The \"tag\" for the file name must be exactly 4 characters", ArgumentTypes.ASCII){ Author = "Noxid" },
            //commision for Voidmage_Lowell
            new Command("PHY", "PHYsics define", "Change physics variables", "Parameter", ArgumentTypes.Number, "Value", ArgumentTypes.Number){ Author = "Noxid" },
            
            //Included in Serri's "TSC+ Improved"
            //commision for Cultr1
            new Command("NAM", "NAMe box", "Displays a name", new Argument("Name", 0, ArgumentTypes.ASCII, "$")){ Author = "Noxid" },
            new Command("MIM", "infinite MIMiga mask", "Set the current mimiga mask graphic to graphic X", ArgumentTypes.Number){ Author = "Lace" },
            new Command("CMN", "Change Map parts (No smoke)", "Same as <CMP but doesn't spawn smoke", ArgumentTypes.XCoord, ArgumentTypes.YCoord, ArgumentTypes.TileIndex ){ Author = "HaydenStudios" },
            new Command("OTR", "Optimized TRansfer stage", "Go to stage X with event Y. Preserves player coordinates", CommandProperties.EndsEvent, ArgumentTypes.Map, ArgumentTypes.Event){ Author = "Mint" },
            new Command("MS4", "MeSsage 4", "Displays an invisble message box at the bottom of the screen", CommandProperties.ClearsTextbox){ Author = "Serri, Txin" },
            new Command("BUY", "BUY", "Jump to event Y if you have less than X money", ArgumentTypes.Number, ArgumentTypes.Event){ Author = "BLink" },
            new Command("SEL", "SELl", "Earn X amount of money", ArgumentTypes.Number){ Author = "BLink" },
            new Command("BBP", "Big BumP", "Bump the player in the direction X, with Y upward force", ArgumentTypes.Direction, ArgumentTypes.Number){ Author = "Carrotlord" },

            //Part of Enlight's Equip+
            new Command("MOD", "MODify", "Sets modifier XXXX to the 12 digit condition",
                ArgumentTypes.Number, //TODO use local enum
                new Argument("Is Invincible", 1, ""),
                new Argument("Is Underwater", 1, ""),
                new Argument("Is on Ground", 1, ""),
                new Argument("Is Moving", 1, ""),
                new Argument("Is Boosting", 1, ""),
                new Argument("Holding Shift/W", 1, ""),
                new Argument("At Max HP", 1, ""),
                new Argument("At Full Ammo", 1, ""),
                new Argument("At Max XP", 1, ""),
                new Argument("HP ??? Threshold", 1, ""),
                new Argument("In Range of Curly", 1, ""),
                new Argument("(Reserved)", 1, "")
                ){ Author = "Enlight" },
            new Command("EQC", "EQuip Configure", "Sets the EQC ID \"X\" to the value Y. Only numbers [0,127] are supported " +
                "(except for timestop/freezing, which support -1 to disable)",
                new Argument(ArgumentTypes.Number), //TODO use local enum
                new Argument(ArgumentTypes.Number)){ Author = "Enlight" },

            new Command("RNJ", "RaNdom Jump", "Jumps to a random event from the list of W supplied arguments", CommandProperties.EndsEvent, "Event count", new RepeatStructure(RepeatTypes.GlobalIndex, 0, ArgumentTypes.Event)){ Author = "bigbadwoof, BLink" },
            new Command("RNJ", "RaNdom Jump", "Jumps to a random event between W and X (inclusive)", CommandProperties.EndsEvent, ArgumentTypes.Event, ArgumentTypes.Event){ Author = "Cyber" },
            new Command("CNV", "Change Npc Variable", "Change variable X of the NPC with event W to the value Y", ArgumentTypes.NPCEvent, ArgumentTypes.Number, ArgumentTypes.Number){ Author = "Cyber" },
            new Command("HEX", "HEX edit", "Set the four bytes at address W to the value X", new Argument("Address", 6, ArgumentTypes.Number), new Argument("Value", 2, ArgumentTypes.Number)){ Author = "SlightlyIntelligentMonkey" },
            //Made for Txin's mod "Rise of Ballos"
            new Command("CAL", "CALl", "Calls the function at address W", new Argument("Address", 8)){ Author = "Txin" },
            new Command("CAC", "CAll Complex", "Pushes the value X, then calls the function at address W",
                new Argument("Argument", 8, ArgumentTypes.Number, ""), new Argument("Address", 8)){ Author = "Txin" },
            new Command("NPC", "setNPChar", "Call the SetNpChar function",
                new Argument("code_char", ""), new Argument(ArgumentTypes.XCoord, ""), new Argument(ArgumentTypes.YCoord, ""),
                new Argument("xm", ""), new Argument("ym", ""), new Argument("dir", ArgumentTypes.Direction, ""), new Argument("parent", ""), new Argument("draw order", "")){ Author = "Txin" },
            new Command("BSC", "Boss Script load Complex", "Custom boss health bar", ArgumentTypes.Number, new RepeatStructure(RepeatTypes.GlobalIndex, 0, "Boss", ArgumentTypes.NPCEvent)){ Author = "Txin" },
            new Command("MBI", "My Bump (I?)", "Unknown", ArgumentTypes.Number){ Author = "Txin" },
            new Command("CEX", "Create EXplosion", "Create an epxlosion",
                new Argument(ArgumentTypes.XCoord, ""), new Argument(ArgumentTypes.YCoord,""), new Argument(ArgumentTypes.Direction, "")){ Author = "Txin" },
            new Command("TXC", "TeXt Colour", "Set the text colour to the integer value X", new Argument("Colour", 8, ArgumentTypes.Number)){ Author = "Txin" },

            new Command("BKG", "BacKGround", "The one and only background hack",
                new Argument("Slot number"),
                new Argument("L_framerect"),
                new Argument("U_framerect"),
                new Argument("X size"),
                new Argument("Y size"),
                new Argument("X repeat"),
                new Argument("Y repeat"),
                new Argument("X distance"),
                new Argument("Y distance"),
                    //0 = fixed
                    //1 = horizontal move with char/camera
                    //2 = vertical move with char/camera
                    //4 = horizontal move with timer
                    //8 = vertical move with timer
                    //16 = scroll with char's direction instead of away
                new Argument("Scroll type"),
                new Argument("Scroll speed X"),
                new Argument("Scroll speed Y"),
                new Argument("Animation sprites"),
                new Argument("Animation speed"),
                new Argument("X_offset"),
                new Argument("Y_offset")
                ){ Author = "BLink" },

            //Part of Bionicobot's TSC extensions
            new Command("CTS", "Change TileSet", "Sets the current tileset to PrtX.bmp",
                new Argument("Tileset name", -1, ArgumentTypes.ASCII, ";")){ Author = "Bionicobot" },
            new Command("CBK", "Change BacKground", "Sets the current background to bkX.bmp in follow slowly mode",
                new Argument("Background name", -1, ArgumentTypes.ASCII, ";")){ Author = "Bionicobot" },
            new Command("SET", "SET variable", "Checks for dat.bin, which stores a single value, and if it exists, jumps to event ####",
                new Argument()){ Author = "Bionicobot" }, //TODO what arg type is this
            new Command("SMN", "Set My Number", "Sets the value held by dat.bin to ####",
                new Argument()){ Author = "Bionicobot" }, //TODO what arg type is this
            new Command("JMN", "Set My Number", "Gets the number held by dat.bin, adds 300 to it, and then jumps to that event.",
                CommandProperties.EndsEvent){ Author = "Bionicobot" },
            new Command("VAS", "VAriable Set", "Puts variable value/number nBBB into variable vAAA",
                new Argument(ArgumentTypes.Number),
                new Argument(ArgumentTypes.Number)){ Author = "Bionicobot" },
            new Command("VCV", "Variable Clear Variables", "Clears #### variables starting at vAAA",
                new Argument(ArgumentTypes.Number),
                new Argument(ArgumentTypes.Number)){ Author = "Bionicobot" },
            new Command("VCJ", "Variable Compare Jump", "Compares nAAA to nBBB using comparator COMP and jumps to event CCCC if it returns true",
                new Argument(ArgumentTypes.Number),
                new Argument(),
                new Argument(ArgumentTypes.Number),
                new Argument(ArgumentTypes.Event)){ Author = "Bionicobot" },
            new Command("VPF", "Variable Perform Function", "nAAA has FUNC applied to it using nBBB and is stored in variable vCCC",
                new Argument(ArgumentTypes.Number),
                new Argument(),
                new Argument(ArgumentTypes.Number),
                new Argument(ArgumentTypes.Event)){ Author = "Bionicobot" },
            new Command("VAD", "VAriable Display", "Displays the value of nAAA",
                new Argument(ArgumentTypes.Number)){ Author = "Bionicobot" },
            new Command("RTB", "???", "Used internally by VAD, could cause crashes"){ Author = "Bionicobot" },
            new Command("RND", "RaNDom variable", "Puts a random numder between [###1,###2] into variable vAAA",
                new Argument(ArgumentTypes.Number),
                new Argument(ArgumentTypes.Number),
                new Argument(ArgumentTypes.Number)){ Author = "Bionicobot" },
            new Command("SEF", "Set EFfect", "Creates effect with type CCCC and mode DDDD, using method METH with parameters AAAA and BBBB",
                new Argument(ArgumentTypes.Number),
                new Argument(ArgumentTypes.Number),
                new Argument(ArgumentTypes.Number),
                new Argument(ArgumentTypes.Number)){ Author = "Bionicobot" },
            new Command("SEV", "Set Entity Velocity", "Gives entity nAAA x velocity NBBB and y velocity NCCC",
                new Argument(ArgumentTypes.NPCEvent),
                new Argument(ArgumentTypes.Number),
                new Argument(ArgumentTypes.Number)){ Author = "Bionicobot" },
            new Command("SPV", "Set Player Velocity", "Gives the player x velocity NAAA and y velocity NBBB",
                new Argument(ArgumentTypes.Number),
                new Argument(ArgumentTypes.Number)){ Author = "Bionicobot" },
            new Command("BKG", "BacKGround", "Same as BLink's BKG, but it loads parameters from the provided file (0 resets)",
                new Argument(ArgumentTypes.ASCII)),

            //Part of JakeV's mod engine
            new Command("ATT", "Animate Tile Texture", "Sets tile X to cycle through the next Y tiles using Z frame intervals",
                new Argument("Tile number"),
                new Argument("Textures"),
                new Argument("Wait time")){ Author = "JakeV" },
            new Command("BKG", "BacKGround (simplified)", "A simplified/stack-based version of the background hack",
                new Argument("X camera scroll speed"),
                new Argument("Y camera scroll speed"),
                new Argument("X scroll speed"),
                new Argument("Y scroll speed"),
                new Argument("Image name", -1, ArgumentTypes.ASCII, "$")){ Author = "JakeV" }
        };
    }
}
